abstract class Shape {
    public abstract double calculateArea();
}

abstract class TwoDimensionalShape extends Shape {
    @Override
    public abstract double calculateArea();
}

abstract class ThreeDimensionalShape extends Shape {
    public abstract double calculateVolume();
}

class Circle extends TwoDimensionalShape {
    private double radius;

    public Circle(double radius) {
        this.radius = radius;
    }

    @Override
    public double calculateArea() {
        return Math.PI * radius * radius;
    }
}

class Square extends TwoDimensionalShape {
    private double side;

    public Square(double side) {
        this.side = side;
    }

    @Override
    public double calculateArea() {
        return side * side;
    }
}

class Sphere extends ThreeDimensionalShape {
    private double radius;

    public Sphere(double radius) {
        this.radius = radius;
    }

    @Override
    public double calculateArea() {
        return 4 * Math.PI * radius * radius;
    }

    @Override
    public double calculateVolume() {
        return (4 / 3) * Math.PI * Math.pow(radius, 3);
    }
}

class Cube extends ThreeDimensionalShape {
    private double side;

    public Cube(double side) {
        this.side = side;
    }

    @Override
    public double calculateArea() {
        return 6 * side * side;
    }

    @Override
    public double calculateVolume() {
        return Math.pow(side, 3);
    }
}

public class MainShape {
    public static void main(String[] args) {
        Circle circle = new Circle(5);
        Square square = new Square(4);
        Sphere sphere = new Sphere(3);
        Cube cube = new Cube(2);

        System.out.println("Circle Area: " + circle.calculateArea());
        System.out.println("Square Area: " + square.calculateArea());
        System.out.println("Sphere Area: " + sphere.calculateArea() + ", Volume: " + sphere.calculateVolume());
        System.out.println("Cube Area: " + cube.calculateArea() + ", Volume: " + cube.calculateVolume());
    }
}
